{
  "name": "vscode-graphql",
  "version": "0.3.16",
  "preview": true,
  "private": false,
  "license": "MIT",
  "displayName": "GraphQL",
  "keywords": [
    "multi-root ready",
    "graphql",
    "lsp",
    "graph"
  ],
  "description": "GraphQL extension for VSCode adds syntax highlighting, validation, and language features like go to definition, hover information and autocompletion for graphql projects. This extension also works with queries annotated with gql tag.",
  "icon": "assets/images/logo.png",
  "repository": {
    "type": "git",
    "url": "https://github.com/graphql/vscode-graphql"
  },
  "homepage": "https://github.com/graphql/vscode-graphql/blob/master/README.md",
  "galleryBanner": {
    "color": "#032539",
    "theme": "dark"
  },
  "publisher": "GraphQL",
  "engines": {
    "vscode": "^1.32.0"
  },
  "categories": [
    "Programming Languages",
    "Snippets",
    "Linters",
    "Other"
  ],
  "activationEvents": [
    "onCommand:vscode-graphql.isDebugging",
    "onCommand:vscode-graphql.contentProvider",
    "onLanguage:graphql",
    "workspaceContains:**/.graphqlrc",
    "workspaceContains:**/.graphqlrc.{json,yaml,yml,js}",
    "workspaceContains:**/graphql.config.{json,yaml,yml,js}"
  ],
  "main": "./out/extension",
  "contributes": {
    "languages": [
      {
        "id": "graphql",
        "extensions": [
          ".gql",
          ".graphql",
          ".graphqls"
        ],
        "aliases": [
          "GraphQL",
          "graphql"
        ],
        "configuration": "./language/language-configuration.json"
      }
    ],
    "grammars": [
      {
        "language": "graphql",
        "path": "./grammars/graphql.json",
        "scopeName": "source.graphql"
      },
      {
        "injectTo": [
          "source.js",
          "source.ts",
          "source.js.jsx",
          "source.tsx",
          "source.vue",
          "source.svelte"
        ],
        "scopeName": "inline.graphql",
        "path": "./grammars/graphql.js.json",
        "embeddedLanguages": {
          "meta.embedded.block.graphql": "graphql"
        }
      },
      {
        "injectTo": [
          "source.reason",
          "source.ocaml"
        ],
        "scopeName": "inline.graphql.re",
        "path": "./grammars/graphql.re.json",
        "embeddedLanguages": {
          "meta.embedded.block.graphql": "graphql"
        }
      },
      {
        "injectTo": [
          "source.rescript"
        ],
        "scopeName": "inline.graphql.res",
        "path": "./grammars/graphql.rescript.json",
        "embeddedLanguages": {
          "meta.embedded.block.graphql": "graphql"
        }
      },
      {
        "injectTo": [
          "text.html.markdown"
        ],
        "scopeName": "markdown.graphql.codeblock",
        "path": "./grammars/graphql.markdown.codeblock.json",
        "embeddedLanguages": {
          "meta.embedded.block.graphql": "graphql"
        }
      }
    ],
    "snippets": [
      {
        "language": "graphql",
        "path": "./snippets/graphql.json"
      }
    ],
    "configuration": {
      "title": "VSCode GraphQL",
      "properties": {
        "vscode-graphql.debug": {
          "type": [
            "boolean",
            "null"
          ],
          "default": false,
          "description": "Enable debug logs"
        },
        "vscode-graphql.trace.server": {
          "type": [
            "string"
          ],
          "default": "off",
          "description": "Enable tracing for language server"
        },
        "vscode-graphql.showExecCodelens": {
          "type": [
            "boolean"
          ],
          "description": "Show codelens to execute operations inline",
          "default": true
        },
        "vscode-graphql.useSchemaFileDefinitions": {
          "type": [
            "boolean"
          ],
          "description": "Use local SDL/IDL files for definition lookups. Default is to use generated_schema.graphql from GraphQL Config settings for definitions"
        },
        "graphql-config.load.rootDir": {
          "type": [
            "string"
          ],
          "description": "Base dir for graphql config loadConfig()"
        },
        "graphql-config.load.filePath": {
          "type": [
            "string"
          ],
          "description": "filePath for graphql config loadConfig()",
          "default": null
        },
        "graphql-config.load.legacy": {
          "type": [
            "boolean"
          ],
          "description": "legacy mode for graphql config v2 config",
          "default": null
        },
        "graphql-config.load.configName": {
          "type": [
            "string"
          ],
          "description": "optional <configName>.config.js instead of default `graphql`",
          "default": null
        },
        "graphql-config.dotEnvPath": {
          "type": [
            "string"
          ],
          "description": "optional .env load path, if not the default",
          "default": null
        }
      }
    },
    "commands": [
      {
        "command": "vscode-graphql.isDebugging",
        "title": "VSCode GraphQL - Is Debugging?"
      },
      {
        "command": "vscode-graphql.restart",
        "title": "VSCode GraphQL - Manual Restart"
      },
      {
        "command": "vscode-graphql.contentProvider",
        "title": "Execute GraphQL Operations"
      }
    ]
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "postinstall": "node ./node_modules/vscode/bin/install",
    "test": "npm run compile && node ./node_modules/vscode/bin/test",
    "vsce:package": "vsce package",
    "env:source": "export $(cat .envrc | xargs)",
    "vsce:publish": "sh publish.sh",
    "upgrade-interactive": "npx npm-check -u"
  },
  "devDependencies": {
    "@types/capitalize": "^2.0.0",
    "@types/dotenv": "^8.2.0",
    "@types/mocha": "5.2.7",
    "@types/node": "12.12.34",
    "@types/ws": "6.0.4",
    "tslint": "5.20.1",
    "typescript": "3.9.7",
    "vsce": "^1.78.0",
    "vscode": "^1.1.37"
  },
  "dependencies": {
    "@graphql-tools/url-loader": "^6.0.19-alpha-edce0415.0",
    "@graphql-tools/wrap": "^6.0.19-alpha-edce0415.0",
    "apollo-cache-inmemory": "1.6.6",
    "apollo-client": "2.6.10",
    "apollo-link": "1.2.14",
    "apollo-link-error": "^1.1.13",
    "apollo-link-http": "1.5.17",
    "apollo-link-ws": "1.0.20",
    "babel-polyfill": "6.26.0",
    "capitalize": "^2.0.3",
    "dotenv": "^8.2.0",
    "graphql": "^15.4.0",
    "graphql-config": "^3.2.0",
    "graphql-language-service-server": "^2.5.6",
    "graphql-tag": "^2.11.0",
    "node-fetch": "^2.6.0",
    "ovsx": "0.1.0-next.dacd2fd",
    "subscriptions-transport-ws": "^0.9.17",
    "vscode-languageclient": "5.2.1",
    "ws": "^7.3.1"
  },
  "resolutions": {
    "graphql": "^15.3.0",
    "graphql-config": "^3.0.3",
    "@graphql-tools/wrap": "6.0.19-alpha-edce0415.0",
    "@graphql-tools/url-loader": "6.0.19-alpha-edce0415.0"
  }
}
